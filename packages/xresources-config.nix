{ lib
, stdenv
, writeTextFile
}:

let
  defaultConfig = {
    colors = {
      foreground = "#ffffff";
      background = "#000000";
    };
    cursor = {
      size = 24;
      theme = "Adwaita";
      hideTimeout = 5000;
      showWhenTyping = "enable";
    };
    font = {
      name = "monospace";
      size = 12;
    };
    keybindings = {
      settings = "s";
      display = "x";
      wifi = "y";
      bluetooth = "u";
      files = "Shift+f";
      exitApp = "Shift+q";
      killApp = "Alt+q";
      reload = "Shift+c";
      refresh = "Shift+r";
      logout = "Shift+e";
      reboot = "Shift+b";
      shutdown = "Shift+p";
      sleep = "Shift+s";
      launcherApp = "space";
      launcherCmd = "Shift+space";
      help = "question";
      launcherWindow = "Ctrl+space";
      fileSearch = "Alt+space";
      lookSelector = "Alt+l";
    };
    bar = {
      position = "bottom";
      font = "monospace";
      separatorChar = " ";
      mode = "dock";
      workspaceMinWidth = 36;
    };
    extraConfig = "";
  };
in
stdenv.mkDerivation {
  pname = "regolith-xresources";
  version = "1.0.0";

  dontUnpack = true;
  dontBuild = true;

  installPhase = ''
    mkdir -p $out/share/regolith/config
    cat > $out/share/regolith/config/Xresources << EOF
    ! Regolith Xresources file - Generated by Nix

    ! Colors
    *.foreground: ${defaultConfig.colors.foreground}
    *.background: ${defaultConfig.colors.background}
    
    ! Cursor settings
    Xcursor.size: ${toString defaultConfig.cursor.size}
    Xcursor.theme: ${defaultConfig.cursor.theme}
    
    ! Font settings
    *.font: ${defaultConfig.font.name}-${toString defaultConfig.font.size}
    
    ! Window manager settings
    wm.hide_cursor.timout: ${toString defaultConfig.cursor.hideTimeout}
    wm.hide_cursor.show_when_typing: ${defaultConfig.cursor.showWhenTyping}
    
    ! Keybindings
    wm.binding.settings: ${defaultConfig.keybindings.settings}
    wm.binding.display: ${defaultConfig.keybindings.display}
    wm.binding.wifi: ${defaultConfig.keybindings.wifi}
    wm.binding.bluetooth: ${defaultConfig.keybindings.bluetooth}
    wm.binding.files: ${defaultConfig.keybindings.files}
    wm.binding.exit_app: ${defaultConfig.keybindings.exitApp}
    wm.binding.kill_app: ${defaultConfig.keybindings.killApp}
    wm.binding.reload: ${defaultConfig.keybindings.reload}
    wm.binding.refresh: ${defaultConfig.keybindings.refresh}
    wm.binding.logout: ${defaultConfig.keybindings.logout}
    wm.binding.reboot: ${defaultConfig.keybindings.reboot}
    wm.binding.shutdown: ${defaultConfig.keybindings.shutdown}
    wm.binding.sleep: ${defaultConfig.keybindings.sleep}
    wm.binding.launcher.app: ${defaultConfig.keybindings.launcherApp}
    wm.binding.launcher.cmd: ${defaultConfig.keybindings.launcherCmd}
    wm.binding.help: ${defaultConfig.keybindings.help}
    wm.binding.launcher.window: ${defaultConfig.keybindings.launcherWindow}
    wm.binding.file_search: ${defaultConfig.keybindings.fileSearch}
    wm.binding.look_selector: ${defaultConfig.keybindings.lookSelector}
    
    ! Bar configuration
    wm.bar.position: ${defaultConfig.bar.position}
    wm.bar.font: ${defaultConfig.bar.font}
    wm.bar.separatorchar: ${defaultConfig.bar.separatorChar}
    wm.bar.mode: ${defaultConfig.bar.mode}
    wm.bar.workspace_min_width: ${toString defaultConfig.bar.workspaceMinWidth}
    
    ! Extra configuration
    ${defaultConfig.extraConfig}
    EOF
  '';

  meta = with lib; {
    description = "Xresources configuration for Regolith Linux";
    license = licenses.mit;
    platforms = platforms.linux;
    maintainers = [ ];
  };
}